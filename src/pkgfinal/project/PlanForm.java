/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkgfinal.project;

import java.awt.Font;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.plaf.FontUIResource;
import javax.swing.table.DefaultTableModel;
import static pkgfinal.project.Dashboard.planTable;

/**
 *
 * @author Gerico
 */
public class PlanForm extends javax.swing.JFrame {

    /**
     * Creates new form PlanForm
     */
    public PlanForm() {
        initComponents();
        Connect();
    }
    
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    DefaultTableModel d;
    
    public void Connect()
    {
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/yearbook_database","root", "");
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PlanForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex, "Connection Error: Unable To Reach Databse", JOptionPane.ERROR_MESSAGE);
            System.out.println("Connection Error");
        }
        
    }
    
    
    
     
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        planTitle = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        planDescription = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        AddFile = new javax.swing.JButton();
        addPlan = new javax.swing.JButton();
        resetPlan = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        planDate = new com.toedter.calendar.JDateChooser();
        planAccomplishment = new com.toedter.calendar.JDateChooser();
        closePlan = new javax.swing.JButton();
        filePath = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        editPlan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(44, 62, 80));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Title of Plan:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 105, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Plan Description: ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 218, -1, -1));

        planTitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(planTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 101, 232, 25));

        planDescription.setColumns(20);
        planDescription.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        planDescription.setRows(5);
        jScrollPane1.setViewportView(planDescription);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 241, 358, 145));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Date Planned:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 146, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Date of Accomplishment:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 181, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Add Plan Attachment:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 408, -1, -1));

        AddFile.setBackground(new java.awt.Color(0, 153, 102));
        AddFile.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        AddFile.setForeground(new java.awt.Color(255, 255, 255));
        AddFile.setText("Add File");
        AddFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddFileActionPerformed(evt);
            }
        });
        jPanel1.add(AddFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(298, 404, -1, -1));

        addPlan.setBackground(new java.awt.Color(34, 167, 240));
        addPlan.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        addPlan.setForeground(new java.awt.Color(255, 255, 255));
        addPlan.setText("Add Plan");
        addPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlanActionPerformed(evt);
            }
        });
        jPanel1.add(addPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 458, -1, -1));

        resetPlan.setBackground(new java.awt.Color(255, 204, 0));
        resetPlan.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        resetPlan.setForeground(new java.awt.Color(255, 255, 255));
        resetPlan.setText("Reset");
        resetPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetPlanActionPerformed(evt);
            }
        });
        jPanel1.add(resetPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 458, -1, -1));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkgfinal/project/Yearbook Planning/pencil.png"))); // NOI18N
        jLabel6.setText("  PLANNING FORM");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        planDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(planDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 144, 202, 25));

        planAccomplishment.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(planAccomplishment, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 181, 202, 25));

        closePlan.setBackground(new java.awt.Color(255, 51, 51));
        closePlan.setText("X");
        closePlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closePlanActionPerformed(evt);
            }
        });
        jPanel1.add(closePlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 0, 50, 30));
        jPanel1.add(filePath, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 406, 138, 22));

        jLabel7.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel7MouseDragged(evt);
            }
        });
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 90));

        editPlan.setBackground(new java.awt.Color(153, 153, 153));
        editPlan.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        editPlan.setForeground(new java.awt.Color(255, 255, 255));
        editPlan.setText("Edit Plan");
        editPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPlanActionPerformed(evt);
            }
        });
        jPanel1.add(editPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 458, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 501));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlanActionPerformed
        
       
        
        UIManager.put("OptionPane.messageFont", new FontUIResource(new Font(  
        "Century Gothic", Font.BOLD, 14)));
        
       
        String planDateFinal = ((JTextField)planDate.getDateEditor().getUiComponent()).getText();
        String planAccomplishmentFinal = ((JTextField)planAccomplishment.getDateEditor().getUiComponent()).getText();
        
        if (planTitle.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Title of Plan is Empty!");
        }
        else if (planDateFinal.isEmpty()){
            JOptionPane.showMessageDialog(null, "Date Planned is Empty!");
        }
        else if (planAccomplishmentFinal.isEmpty()){
            JOptionPane.showMessageDialog(null, "Date of Accomplishment is Empty!");
        }
        else{
        int result = JOptionPane.showConfirmDialog(this, "Title Plan: " + planTitle.getText()
                + "\nDate of Plan: " + planDateFinal 
                + "\nDate of Accomplishment: " + planAccomplishmentFinal
                + "\nPlan Description: " + planDescription.getText() , "Do you want to continue?", JOptionPane.YES_NO_OPTION);
        
        boolean yes, no;
        if (yes = (result == JOptionPane.YES_OPTION)){
        
        try {
            
            pst = con.prepareStatement("INSERT INTO plan_management(Title, DatePlanned, DateAccomplishment, PlanDescription, Attachment) VALUES (?,?,?,?,?)");
            pst.setString(1,PlanForm.planTitle.getText());
            pst.setString(2,((JTextField)PlanForm.planDate.getDateEditor().getUiComponent()).getText());
            pst.setString(3,((JTextField)PlanForm.planAccomplishment.getDateEditor().getUiComponent()).getText());
            pst.setString(4,PlanForm.planDescription.getText());
            pst.setString(5,PlanForm.filePath.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Plan Added");
                     
            
        } catch (SQLException ex) {
            Logger.getLogger(PlanForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex, "Connection Error: Unable To Reach Databse", JOptionPane.ERROR_MESSAGE);
        } 
        
        planTitle.setText(""); 
        ((JTextField)planDate.getDateEditor().getUiComponent()).setText("");
        ((JTextField)planAccomplishment.getDateEditor().getUiComponent()).setText("");
        planDescription.setText("");
        
        this.dispose();
        Dashboard.planRefresh.doClick();
        
        }
        else if (no = (result == JOptionPane.NO_OPTION)){
            planTitle.setText(""); 
            ((JTextField)planDate.getDateEditor().getUiComponent()).setText("");
            ((JTextField)planAccomplishment.getDateEditor().getUiComponent()).setText("");
            planDescription.setText("");
            
            
        }
      }
    }//GEN-LAST:event_addPlanActionPerformed

    private void closePlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closePlanActionPerformed
       
        this.dispose();
        Dashboard.editplanButton.setEnabled(false);
        Dashboard.deleteplanButton.setEnabled(false);
        
    }//GEN-LAST:event_closePlanActionPerformed

    private void resetPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetPlanActionPerformed
        planTitle.setText(""); 
        ((JTextField)planDate.getDateEditor().getUiComponent()).setText("");
        ((JTextField)planAccomplishment.getDateEditor().getUiComponent()).setText("");
        planDescription.setText("");
 
    }//GEN-LAST:event_resetPlanActionPerformed

    private void AddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddFileActionPerformed
       
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(this);
        
        File f = fileChooser.getSelectedFile();
        String attachment = f.getAbsolutePath();
        filePath.setText(attachment);
        
    }//GEN-LAST:event_AddFileActionPerformed

    private void jLabel7MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseDragged
      int kordinatX = evt.getXOnScreen();
      int kordinatY = evt.getYOnScreen();
        
      this.setLocation(kordinatX, kordinatY);
    }//GEN-LAST:event_jLabel7MouseDragged

    private void editPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPlanActionPerformed
    
           try {
            
            
            d = (DefaultTableModel)planTable.getModel();
            int selectIndex = planTable.getSelectedRow();
            String title = d.getValueAt(selectIndex, 0).toString();
            
            pst = con.prepareStatement("UPDATE plan_management SET Title = ?, DatePlanned = ?, DateAccomplishment = ?, PlanDescription = ?, Attachment = ? WHERE Title = ?");
            pst.setString(1,PlanForm.planTitle.getText());
            pst.setString(2,((JTextField)PlanForm.planDate.getDateEditor().getUiComponent()).getText());
            pst.setString(3,((JTextField)PlanForm.planAccomplishment.getDateEditor().getUiComponent()).getText());
            pst.setString(4,PlanForm.planDescription.getText());
            pst.setString(5,PlanForm.filePath.getText());
            pst.setString(6,title);
            pst.executeUpdate();
            System.out.println(PlanForm.planDescription.getText());
            JOptionPane.showMessageDialog(this, "Plan Edited");
            
            
            PlanForm.planTitle.setText(""); 
            ((JTextField)PlanForm.planDate.getDateEditor().getUiComponent()).setText("");
            ((JTextField)PlanForm.planAccomplishment.getDateEditor().getUiComponent()).setText("");
            PlanForm.planDescription.setText("");
            PlanForm.filePath.setText("");
            
            
            this.dispose();
            Dashboard.editplanButton.setEnabled(false);
            Dashboard.deleteplanButton.setEnabled(false);
            Dashboard.planRefresh.doClick();
            
 
        } catch (SQLException ex) {
            Logger.getLogger(PlanForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex, "Connection Error: Unable To Reach Databse", JOptionPane.ERROR_MESSAGE);
        } 
        
        
        
        
    }//GEN-LAST:event_editPlanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlanForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddFile;
    public static javax.swing.JButton addPlan;
    public static javax.swing.JButton closePlan;
    public static javax.swing.JButton editPlan;
    public static javax.swing.JTextField filePath;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static com.toedter.calendar.JDateChooser planAccomplishment;
    public static com.toedter.calendar.JDateChooser planDate;
    public static javax.swing.JTextArea planDescription;
    public static javax.swing.JTextField planTitle;
    private javax.swing.JButton resetPlan;
    // End of variables declaration//GEN-END:variables
}
